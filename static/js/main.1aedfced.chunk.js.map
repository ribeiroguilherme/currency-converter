{"version":3,"sources":["components/CurrencyConverter/CurrencyRow/CurrencyRow.module.css","components/CurrencyConverter/CurrencyConverter.module.css","pages/CurrencyConverterPage.module.css","components/Card/Card.module.css","components/CurrencyConverter/ConversionRatesInfo/ConversionRatesInfo.module.css","components/Select/Select.module.css","components/Input/Input.module.css","components/CurrencyConverter/ErrorMessage/ErrorMessage.module.css","components/Spinner/Spinner.module.css","components/Card/Card.tsx","api/utils/QueryStringBuilder.ts","components/Spinner/Spinner.tsx","api/ExchangeRatesApi/ExchangeRatesApi.ts","components/CurrencyConverter/ConversionRatesInfo/ConversionRatesInfo.tsx","components/Select/Select.tsx","components/Input/Input.tsx","components/CurrencyConverter/CurrencyRow/CurrencyRow.tsx","components/CurrencyConverter/ErrorMessage/ErrorMessage.tsx","components/CurrencyConverter/CurrencyConverter.tsx","api/ExchangeRatesApi/useExchangeRatesApi.ts","pages/CurrencyConverterPage.tsx","App.tsx","index.tsx"],"names":["module","exports","Card","className","children","rest","styles","card","QueryStringBuilder","build","parameters","Object","entries","filter","map","key","value","encodeURIComponent","Array","isArray","join","SpinnerSizes","ExchangeRatesApi","baseUrl","base","symbols","query","access_key","process","REACT_APP_ACCESS_KEY_EXCHANGE_RATES","fetch","this","response","ok","json","error","Error","code","message","data","ConversionRatesInfo","fromCurrency","toCurrency","rate","wrapper","toFixed","Select","name","options","onChange","select","option","label","Input","input","CurrencyRow","inputValue","currencyValue","currencySymbols","onChangeInputValue","onChangeCurrency","selectorOptions","React","symbol","row","aria-label","type","ErrorMessage","errorMessage","Spinner","color","size","spinner","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","CurrencyConverter","exchangeRatesApi","useExchangeRatesApi","setSymbols","setFromCurrency","setToCurrency","isEdittingUsingFromInput","setIsEdittingUsingFromInput","amount","setAmount","rates","setRates","setError","a","fetchLatestRates","keys","fetchInitialData","updateRates","baseCurrency","handleOnChangeFromAmount","event","parseFloat","target","handleOnChangeToAmount","handleOnSelectFromCurrency","handleOnSelectToCurrency","currentRate","toValue","fromValue","loader","title","CurrencyConverterPage","pageContainer","currencyConverterCard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aedfced.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CurrencyRow_row__Lr9Mm\",\"input\":\"CurrencyRow_input__sDDuN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"CurrencyConverter_title__XnJDQ\",\"loader\":\"CurrencyConverter_loader__1m2d5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"CurrencyConverterPage_pageContainer__EBSbb\",\"currencyConverterCard\":\"CurrencyConverterPage_currencyConverterCard__2CgoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1eE8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ConversionRatesInfo_wrapper__Ra48s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__3UVD7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"ErrorMessage_errorMessage__9e1OK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\",\"spin\":\"Spinner_spin__2cA5G\"};","import * as React from 'react';\nimport styles from './Card.module.css';\n\ntype CardProps = {\n  className?: string;\n}\n\nconst Card: React.FC<CardProps> = ({ className, children, ...rest }) => {\n  return (\n    <div className={`${styles.card} ${className}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport { Card };\n","type QueryString = {\n  [key: string]: string | number | boolean | string[] | undefined;\n};\n\nclass QueryStringBuilder {\n  public static build = (parameters: QueryString): string => {\n\n    return Object.entries(parameters)\n      .filter(([, value]) => value)\n      .map(\n        ([key, value]) => {\n          if (!value) return '';\n          return `${encodeURIComponent(key)}=${encodeURIComponent(Array.isArray(value) ? value.join(',') : value)}`;\n        })\n      .join('&');\n    }\n}\n\nexport default QueryStringBuilder;\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\ntype SpinnerProps = {\n  color?: string;\n  size?: 'medium';\n  className?: string;\n};\n\nenum SpinnerSizes {\n  medium = '32',\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({\n  color = '#0abf53',\n  size = 'medium',\n  className = '',\n  ...rest\n}) => {\n  return (\n    <div className={`${styles.spinner} ${className}`} {...rest}>\n      <svg\n        width={SpinnerSizes[size]}\n        height={SpinnerSizes[size]}\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M15.9163 8C15.9163 8.61701 15.4162 9.1172 14.7991 9.1172C14.1821 9.1172 13.6819 8.61701 13.6819 8C13.6819 4.86177 11.1379 2.31774 7.99967 2.31774C4.86145 2.31774 2.31741 4.86177 2.31741 8C2.31741 11.1382 4.86145 13.6823 7.99967 13.6823C8.61669 13.6823 9.11688 14.1825 9.11688 14.7995C9.11688 15.4165 8.61669 15.9167 7.99967 15.9167C3.62742 15.9167 0.0830078 12.3723 0.0830078 8C0.0830078 3.62775 3.62742 0.0833333 7.99967 0.0833333C12.3719 0.0833333 15.9163 3.62775 15.9163 8Z\"\n          fill={color}\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport { Spinner };\n","import { IExchangeRatesApi, LatestRatesDto, ApiError } from './IExchangeRatesApi';\nimport QueryStringBuilder from '../utils/QueryStringBuilder';\n\nclass ExchangeRatesApi implements IExchangeRatesApi {\n  private readonly baseUrl = 'http://api.exchangeratesapi.io/v1/';\n\n  public async fetchLatestRates(base?: string, symbols?: string[]): Promise<LatestRatesDto> {\n    const query = QueryStringBuilder.build({\n      base,\n      symbols,\n      access_key: process.env.REACT_APP_ACCESS_KEY_EXCHANGE_RATES,\n    });\n\n    const response = await fetch(`${this.baseUrl}latest?${query}`);\n\n    if (!response.ok) {\n      const { error }: ApiError = await response.json();\n      throw Error(`${error.code}: ${error.message}`);\n    }\n\n    const data: LatestRatesDto = await response.json();\n    return data;\n  }\n}\n\nexport default ExchangeRatesApi;\n","import * as React from 'react';\nimport styles from './ConversionRatesInfo.module.css';\n\ntype ConversionRatesInfoProps = {\n  fromCurrency: string;\n  toCurrency: string;\n  rate: number;\n};\n\nconst ConversionRatesInfo: React.FC<ConversionRatesInfoProps> = ({\n  fromCurrency,\n  toCurrency,\n  rate,\n}) => {\n  if (!fromCurrency || !toCurrency || !rate) {\n    return null;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <p>\n        1 {fromCurrency} = {rate.toFixed(5)} {toCurrency}\n      </p>\n      <p>\n        1 {toCurrency} = {(1 / rate).toFixed(5)} {fromCurrency}\n      </p>\n    </div>\n  );\n};\n\nexport { ConversionRatesInfo };\n","import * as React from 'react';\nimport styles from './Select.module.css';\n\nexport type Option = { value: string | number; label: string };\n\ninterface SelectProps extends React.SelectHTMLAttributes<HTMLSelectElement> {\n  options: Option[];\n  className?: string;\n}\n\nconst Select: React.FC<SelectProps> = ({\n  name,\n  options,\n  className,\n  onChange,\n  ...rest\n}) => {\n  return (\n    <select\n      className={`${styles.select} ${className}`}\n      name={name}\n      onChange={onChange}\n      {...rest}\n    >\n      {options &&\n        options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n    </select>\n  );\n};\n\nexport { Select };\n","import * as React from 'react';\nimport styles from './Input.module.css';\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  className?: string;\n}\n\nconst Input: React.FC<InputProps> = ({ name, className, ...rest }) => {\n  return (\n    <input className={`${styles.input} ${className}`} name={name} {...rest} />\n  );\n};\n\nexport { Input };\n","import * as React from 'react';\nimport { Select } from '../../Select';\nimport { Input } from '../../Input';\nimport styles from './CurrencyRow.module.css';\n\ntype CurrencyRowProps = {\n  inputValue: number | string;\n  currencyValue: string;\n  currencySymbols: string[];\n  onChangeInputValue(event: React.ChangeEvent<HTMLInputElement>): void;\n  onChangeCurrency(event: React.ChangeEvent<HTMLSelectElement>): void;\n};\n\nconst CurrencyRow: React.FC<CurrencyRowProps> = ({\n  inputValue,\n  currencyValue,\n  currencySymbols,\n  onChangeInputValue,\n  onChangeCurrency,\n}) => {\n\n  const selectorOptions = React.useMemo(() => {\n    function mapToSelectOption(symbol: string) {\n      return { value: symbol, label: symbol };\n    }\n\n    return currencySymbols.map(mapToSelectOption) || [];\n  }, [currencySymbols]);\n\n  return (\n    <div className={styles.row}>\n      <Input\n        className={styles.input}\n        aria-label=\"Currency Amount Field\"\n        name=\"currenyAmountField\"\n        type=\"number\"\n        value={inputValue}\n        onChange={onChangeInputValue}\n      />\n      <Select\n        className={styles.input}\n        aria-label=\"Currency Type\"\n        value={currencyValue}\n        onChange={onChangeCurrency}\n        options={selectorOptions}\n      />\n    </div>\n  );\n};\n\nexport { CurrencyRow };\n","import * as React from 'react';\nimport styles from './ErrorMessage.module.css';\n\nconst ErrorMessage: React.FC = ({ children }) =>\n  children ? <p className={styles.errorMessage}>{children}</p> : null;\n\nexport { ErrorMessage };\n","import * as React from 'react';\nimport { useExchangeRatesApi } from '../../api/ExchangeRatesApi/useExchangeRatesApi';\nimport { ConversionRatesInfo } from './ConversionRatesInfo';\nimport { CurrencyRow } from './CurrencyRow';\nimport { ErrorMessage } from './ErrorMessage';\nimport { Spinner } from '../Spinner';\nimport styles from './CurrencyConverter.module.css';\n\nconst CurrencyConverter: React.FC = () => {\n  const exchangeRatesApi = useExchangeRatesApi();\n  const [symbols, setSymbols] = React.useState<string[]>([]);\n  const [fromCurrency, setFromCurrency] = React.useState<string>('');\n  const [toCurrency, setToCurrency] = React.useState<string>('');\n  const [isEdittingUsingFromInput, setIsEdittingUsingFromInput] = React.useState<boolean>(true);\n  const [amount, setAmount] = React.useState<number>(1);\n  const [rates, setRates] = React.useState<Record<string, number>>({});\n  const [error, setError] = React.useState<string>('');\n\n  React.useEffect(() => {\n    async function fetchInitialData() {\n      const data = await exchangeRatesApi.fetchLatestRates();\n\n      const symbols = Object.keys(data.rates);\n\n      setSymbols(symbols);\n      setFromCurrency(data.base);\n      setToCurrency(symbols[0]);\n      setRates(data.rates);\n    }\n    fetchInitialData();\n  }, [exchangeRatesApi]);\n\n  const updateRates = React.useCallback(\n    async (baseCurrency, toCurrency) => {\n      const data = await exchangeRatesApi.fetchLatestRates(baseCurrency, [toCurrency]);\n      setRates(data.rates);\n    },\n    [exchangeRatesApi],\n  );\n\n  const handleOnChangeFromAmount = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setIsEdittingUsingFromInput(true);\n      setAmount(parseFloat(event.target.value));\n    },\n    [],\n  );\n\n  const handleOnChangeToAmount = React.useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsEdittingUsingFromInput(false);\n    setAmount(parseFloat(event.target.value));\n  }, []);\n\n  const handleOnSelectFromCurrency = React.useCallback(\n    async (event: React.ChangeEvent<HTMLSelectElement>) => {\n      try {\n        await updateRates(event.target.value, toCurrency);\n        setFromCurrency(event.target.value);\n        setError('');\n      } catch (error) {\n        setFromCurrency(fromCurrency);\n        setError(error.message);\n      }\n    },\n    [updateRates, fromCurrency, toCurrency],\n  );\n\n  const handleOnSelectToCurrency = React.useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setToCurrency(event.target.value);\n    },\n    [],\n  );\n\n  const { fromValue, toValue, currentRate } = React.useMemo(() => {\n    const currentRate = rates[toCurrency];\n\n    if (isEdittingUsingFromInput) {\n      return {\n        toValue: (amount * currentRate).toFixed(2),\n        fromValue: amount,\n        currentRate,\n      };\n    }\n    return {\n      fromValue: (amount / currentRate).toFixed(2),\n      toValue: amount,\n      currentRate,\n    };\n  }, [rates, toCurrency, isEdittingUsingFromInput, amount]);\n\n  const isLoading = !fromCurrency || !toCurrency || !rates;\n  if (isLoading) {\n    return <Spinner className={styles.loader} />;\n  }\n\n  return (\n    <>\n      <h3 className={styles.title}>Currency Converter</h3>\n\n      <CurrencyRow\n        inputValue={fromValue}\n        currencyValue={fromCurrency}\n        currencySymbols={symbols}\n        onChangeInputValue={handleOnChangeFromAmount}\n        onChangeCurrency={handleOnSelectFromCurrency}\n      />\n\n      <CurrencyRow\n        inputValue={toValue}\n        currencyValue={toCurrency}\n        currencySymbols={symbols}\n        onChangeInputValue={handleOnChangeToAmount}\n        onChangeCurrency={handleOnSelectToCurrency}\n      />\n\n      <ConversionRatesInfo fromCurrency={fromCurrency} toCurrency={toCurrency} rate={currentRate} />\n\n      <ErrorMessage>{error}</ErrorMessage>\n    </>\n  );\n};\n\nexport { CurrencyConverter };\n","import * as React from 'react';\nimport ExchangeRatesApi from './ExchangeRatesApi';\nimport { IExchangeRatesApi } from './IExchangeRatesApi';\n\nconst useExchangeRatesApi = () => {\n  const [api] = React.useState<IExchangeRatesApi>(new ExchangeRatesApi());\n  return api;\n}\n\nexport { useExchangeRatesApi };\n","import * as React from 'react';\nimport { Card } from '../components/Card';\nimport { CurrencyConverter } from '../components/CurrencyConverter';\nimport styles from './CurrencyConverterPage.module.css';\n\nconst CurrencyConverterPage = () => {\n  return (\n    <div className={styles.pageContainer}>\n      <Card className={styles.currencyConverterCard}>\n        <CurrencyConverter />\n      </Card>\n    </div>\n  );\n};\n\nexport { CurrencyConverterPage };\n","import React from 'react';\nimport { CurrencyConverterPage } from './pages/CurrencyConverterPage';\n\nfunction App() {\n  return (\n    <CurrencyConverterPage />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}